
LED Sequence V1.0 MISRA compliant.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000051e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000572  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000572  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  000005e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000010a3  00000000  00000000  000006d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000091d  00000000  00000000  00001773  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009c8  00000000  00000000  00002090  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000178  00000000  00000000  00002a58  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000058d  00000000  00000000  00002bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000983  00000000  00000000  0000315d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00003ae0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 cd 00 	call	0x19a	; 0x19a <main>
  64:	0c 94 8d 02 	jmp	0x51a	; 0x51a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <app_start_v1>:
#define  F_CPU  8000000
#include <util/delay.h>
#include "app.h"

  void app_start_v1()
  {
  6c:	cf 93       	push	r28
  6e:	df 93       	push	r29
  70:	1f 92       	push	r1
  72:	cd b7       	in	r28, 0x3d	; 61
  74:	de b7       	in	r29, 0x3e	; 62
	  int led=0 ,flag =0;
	  DIO_PinVoltage_type data=LOW;
  76:	19 82       	std	Y+1, r1	; 0x01
#include <util/delay.h>
#include "app.h"

  void app_start_v1()
  {
	  int led=0 ,flag =0;
  78:	00 e0       	ldi	r16, 0x00	; 0
  7a:	10 e0       	ldi	r17, 0x00	; 0
	  DIO_PinVoltage_type data=LOW;
	  while(1)
	  {
		  led=0;
  7c:	e1 2c       	mov	r14, r1
  7e:	f1 2c       	mov	r15, r1
		  while (!flag)
  80:	22 c0       	rjmp	.+68     	; 0xc6 <app_start_v1+0x5a>
		  {
			   BUTTON_read(PC,4,&data);
  82:	ae 01       	movw	r20, r28
  84:	4f 5f       	subi	r20, 0xFF	; 255
  86:	5f 4f       	sbci	r21, 0xFF	; 255
  88:	64 e0       	ldi	r22, 0x04	; 4
  8a:	82 e0       	ldi	r24, 0x02	; 2
  8c:	0e 94 b5 00 	call	0x16a	; 0x16a <BUTTON_read>
			  if (data==HIGH)
  90:	89 81       	ldd	r24, Y+1	; 0x01
  92:	81 30       	cpi	r24, 0x01	; 1
  94:	c1 f4       	brne	.+48     	; 0xc6 <app_start_v1+0x5a>
			  {
				  if (led>3)
  96:	24 e0       	ldi	r18, 0x04	; 4
  98:	e2 16       	cp	r14, r18
  9a:	f1 04       	cpc	r15, r1
  9c:	94 f4       	brge	.+36     	; 0xc2 <app_start_v1+0x56>
				  {
					  flag=1;
					  continue;
				  }
				  
				  DIO_WritePin(PB,LED1+led,HIGH);
  9e:	64 e0       	ldi	r22, 0x04	; 4
  a0:	6e 0d       	add	r22, r14
  a2:	41 e0       	ldi	r20, 0x01	; 1
  a4:	0e 94 cb 01 	call	0x396	; 0x396 <DIO_WritePin>
				  led++;
  a8:	8f ef       	ldi	r24, 0xFF	; 255
  aa:	e8 1a       	sub	r14, r24
  ac:	f8 0a       	sbc	r15, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ae:	9f ef       	ldi	r25, 0xFF	; 255
  b0:	22 e5       	ldi	r18, 0x52	; 82
  b2:	87 e0       	ldi	r24, 0x07	; 7
  b4:	91 50       	subi	r25, 0x01	; 1
  b6:	20 40       	sbci	r18, 0x00	; 0
  b8:	80 40       	sbci	r24, 0x00	; 0
  ba:	e1 f7       	brne	.-8      	; 0xb4 <app_start_v1+0x48>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <app_start_v1+0x52>
  be:	00 00       	nop
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <app_start_v1+0x5a>
			   BUTTON_read(PC,4,&data);
			  if (data==HIGH)
			  {
				  if (led>3)
				  {
					  flag=1;
  c2:	01 e0       	ldi	r16, 0x01	; 1
  c4:	10 e0       	ldi	r17, 0x00	; 0
	  int led=0 ,flag =0;
	  DIO_PinVoltage_type data=LOW;
	  while(1)
	  {
		  led=0;
		  while (!flag)
  c6:	01 15       	cp	r16, r1
  c8:	11 05       	cpc	r17, r1
  ca:	d9 f2       	breq	.-74     	; 0x82 <app_start_v1+0x16>
  cc:	0f 2e       	mov	r0, r31
  ce:	f3 e0       	ldi	r31, 0x03	; 3
  d0:	ef 2e       	mov	r14, r31
  d2:	f1 2c       	mov	r15, r1
  d4:	f0 2d       	mov	r31, r0
  d6:	1e c0       	rjmp	.+60     	; 0x114 <app_start_v1+0xa8>
			  }
		  }
		  led=3;
		  while (flag)
		  { 
			  BUTTON_read(PC,4,&data);
  d8:	ae 01       	movw	r20, r28
  da:	4f 5f       	subi	r20, 0xFF	; 255
  dc:	5f 4f       	sbci	r21, 0xFF	; 255
  de:	64 e0       	ldi	r22, 0x04	; 4
  e0:	82 e0       	ldi	r24, 0x02	; 2
  e2:	0e 94 b5 00 	call	0x16a	; 0x16a <BUTTON_read>
			  if  (data==HIGH)
  e6:	89 81       	ldd	r24, Y+1	; 0x01
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	a1 f4       	brne	.+40     	; 0x114 <app_start_v1+0xa8>
			  {

				  LED_off(LED4-led);
  ec:	87 e0       	ldi	r24, 0x07	; 7
  ee:	8e 19       	sub	r24, r14
  f0:	0e 94 c7 00 	call	0x18e	; 0x18e <LED_off>
				  led--;
  f4:	91 e0       	ldi	r25, 0x01	; 1
  f6:	e9 1a       	sub	r14, r25
  f8:	f1 08       	sbc	r15, r1
				  if (led<0)
  fa:	52 f0       	brmi	.+20     	; 0x110 <app_start_v1+0xa4>
  fc:	2f ef       	ldi	r18, 0xFF	; 255
  fe:	82 e5       	ldi	r24, 0x52	; 82
 100:	97 e0       	ldi	r25, 0x07	; 7
 102:	21 50       	subi	r18, 0x01	; 1
 104:	80 40       	sbci	r24, 0x00	; 0
 106:	90 40       	sbci	r25, 0x00	; 0
 108:	e1 f7       	brne	.-8      	; 0x102 <app_start_v1+0x96>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <app_start_v1+0xa0>
 10c:	00 00       	nop
 10e:	02 c0       	rjmp	.+4      	; 0x114 <app_start_v1+0xa8>
				  {
					  flag=0;
 110:	00 e0       	ldi	r16, 0x00	; 0
 112:	10 e0       	ldi	r17, 0x00	; 0
				  
				  _delay_ms(300) ;
			  }
		  }
		  led=3;
		  while (flag)
 114:	01 15       	cp	r16, r1
 116:	11 05       	cpc	r17, r1
 118:	f9 f6       	brne	.-66     	; 0xd8 <app_start_v1+0x6c>
 11a:	2f ef       	ldi	r18, 0xFF	; 255
 11c:	82 e5       	ldi	r24, 0x52	; 82
 11e:	97 e0       	ldi	r25, 0x07	; 7
 120:	21 50       	subi	r18, 0x01	; 1
 122:	80 40       	sbci	r24, 0x00	; 0
 124:	90 40       	sbci	r25, 0x00	; 0
 126:	e1 f7       	brne	.-8      	; 0x120 <app_start_v1+0xb4>
 128:	00 c0       	rjmp	.+0      	; 0x12a <app_start_v1+0xbe>
 12a:	00 00       	nop
 12c:	a7 cf       	rjmp	.-178    	; 0x7c <app_start_v1+0x10>

0000012e <app_init>:
 


 void app_init(void)
 {
     LED_init(LED1);
 12e:	84 e0       	ldi	r24, 0x04	; 4
 130:	0e 94 c1 00 	call	0x182	; 0x182 <LED_init>
	 LED_init(LED2);
 134:	85 e0       	ldi	r24, 0x05	; 5
 136:	0e 94 c1 00 	call	0x182	; 0x182 <LED_init>
	 LED_init(LED3);
 13a:	86 e0       	ldi	r24, 0x06	; 6
 13c:	0e 94 c1 00 	call	0x182	; 0x182 <LED_init>
	 LED_init(LED4);
 140:	87 e0       	ldi	r24, 0x07	; 7
 142:	0e 94 c1 00 	call	0x182	; 0x182 <LED_init>
	 BUTTON_init(PC,4);
 146:	64 e0       	ldi	r22, 0x04	; 4
 148:	82 e0       	ldi	r24, 0x02	; 2
 14a:	0e 94 a8 00 	call	0x150	; 0x150 <BUTTON_init>
 14e:	08 95       	ret

00000150 <BUTTON_init>:
 #include "button.h"
en_buttonError_t BUTTON_init( DIO_Port_type port, u8 u8_PinNumber)
{
	en_buttonError_t  error = BUTTON_OK;
	
	if (u8_PinNumber <PIN_MAX && port<PORT_MAX)
 150:	68 30       	cpi	r22, 0x08	; 8
 152:	38 f4       	brcc	.+14     	; 0x162 <BUTTON_init+0x12>
 154:	84 30       	cpi	r24, 0x04	; 4
 156:	38 f4       	brcc	.+14     	; 0x166 <BUTTON_init+0x16>
	{    
				DIO_InitPin(port,u8_PinNumber,INFREE);
 158:	41 e0       	ldi	r20, 0x01	; 1
 15a:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_InitPin>
				error = BUTTON_OK;
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	08 95       	ret
	}
	else
	{
              error = WRONG_BUTTON_PIN;
 162:	82 e0       	ldi	r24, 0x02	; 2
 164:	08 95       	ret
 166:	82 e0       	ldi	r24, 0x02	; 2
	}
	
	return error;
}
 168:	08 95       	ret

0000016a <BUTTON_read>:

en_buttonError_t BUTTON_read(DIO_Port_type port, u8 u8_PinNumber , DIO_PinVoltage_type *buttonState)
{
	en_buttonError_t  error = BUTTON_OK;
	
	if (u8_PinNumber <PIN_MAX && port<PORT_MAX)
 16a:	68 30       	cpi	r22, 0x08	; 8
 16c:	30 f4       	brcc	.+12     	; 0x17a <BUTTON_read+0x10>
 16e:	84 30       	cpi	r24, 0x04	; 4
 170:	30 f4       	brcc	.+12     	; 0x17e <BUTTON_read+0x14>
	{
		DIO_ReadPin(port,u8_PinNumber,buttonState);
 172:	0e 94 4f 02 	call	0x49e	; 0x49e <DIO_ReadPin>
		error = BUTTON_OK;
 176:	80 e0       	ldi	r24, 0x00	; 0
 178:	08 95       	ret
	}
	else
	{
		error = WRONG_BUTTON_PIN;
 17a:	82 e0       	ldi	r24, 0x02	; 2
 17c:	08 95       	ret
 17e:	82 e0       	ldi	r24, 0x02	; 2
	}
	
	return error;
} 
 180:	08 95       	ret

00000182 <LED_init>:
{ 
	DIO_InitPin( LEDS_Port, LED_N,OUTPUT);
}
void LED_on     (u8 LED_N)
{
	DIO_WritePin( LEDS_Port, LED_N,HIGH);
 182:	40 e0       	ldi	r20, 0x00	; 0
 184:	68 2f       	mov	r22, r24
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_InitPin>
 18c:	08 95       	ret

0000018e <LED_off>:
}
void LED_off    (u8 LED_N)
{
    DIO_WritePin( LEDS_Port, LED_N,LOW);	
 18e:	40 e0       	ldi	r20, 0x00	; 0
 190:	68 2f       	mov	r22, r24
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	0e 94 cb 01 	call	0x396	; 0x396 <DIO_WritePin>
 198:	08 95       	ret

0000019a <main>:


int main(void)
{ 
	
    app_init();
 19a:	0e 94 97 00 	call	0x12e	; 0x12e <app_init>
    while (1) 
    { 
		 
		app_start_v1();
 19e:	0e 94 36 00 	call	0x6c	; 0x6c <app_start_v1>
 1a2:	fd cf       	rjmp	.-6      	; 0x19e <main+0x4>

000001a4 <DIO_InitPin>:
	    else
	    {
		    error = WRONG_PinNumber;
	    }
	    return error;
    }
 1a4:	68 30       	cpi	r22, 0x08	; 8
 1a6:	08 f0       	brcs	.+2      	; 0x1aa <DIO_InitPin+0x6>
 1a8:	ec c0       	rjmp	.+472    	; 0x382 <DIO_InitPin+0x1de>
 1aa:	41 30       	cpi	r20, 0x01	; 1
 1ac:	09 f4       	brne	.+2      	; 0x1b0 <DIO_InitPin+0xc>
 1ae:	51 c0       	rjmp	.+162    	; 0x252 <DIO_InitPin+0xae>
 1b0:	20 f0       	brcs	.+8      	; 0x1ba <DIO_InitPin+0x16>
 1b2:	42 30       	cpi	r20, 0x02	; 2
 1b4:	09 f4       	brne	.+2      	; 0x1b8 <DIO_InitPin+0x14>
 1b6:	99 c0       	rjmp	.+306    	; 0x2ea <DIO_InitPin+0x146>
 1b8:	e6 c0       	rjmp	.+460    	; 0x386 <DIO_InitPin+0x1e2>
 1ba:	81 30       	cpi	r24, 0x01	; 1
 1bc:	b9 f0       	breq	.+46     	; 0x1ec <DIO_InitPin+0x48>
 1be:	28 f0       	brcs	.+10     	; 0x1ca <DIO_InitPin+0x26>
 1c0:	82 30       	cpi	r24, 0x02	; 2
 1c2:	29 f1       	breq	.+74     	; 0x20e <DIO_InitPin+0x6a>
 1c4:	83 30       	cpi	r24, 0x03	; 3
 1c6:	a1 f1       	breq	.+104    	; 0x230 <DIO_InitPin+0x8c>
 1c8:	e0 c0       	rjmp	.+448    	; 0x38a <DIO_InitPin+0x1e6>
 1ca:	2a b3       	in	r18, 0x1a	; 26
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_InitPin+0x32>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	6a 95       	dec	r22
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_InitPin+0x2e>
 1da:	92 2f       	mov	r25, r18
 1dc:	98 2b       	or	r25, r24
 1de:	9a bb       	out	0x1a, r25	; 26
 1e0:	9b b3       	in	r25, 0x1b	; 27
 1e2:	80 95       	com	r24
 1e4:	89 23       	and	r24, r25
 1e6:	8b bb       	out	0x1b, r24	; 27
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	08 95       	ret
 1ec:	27 b3       	in	r18, 0x17	; 23
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <DIO_InitPin+0x54>
 1f4:	88 0f       	add	r24, r24
 1f6:	99 1f       	adc	r25, r25
 1f8:	6a 95       	dec	r22
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <DIO_InitPin+0x50>
 1fc:	92 2f       	mov	r25, r18
 1fe:	98 2b       	or	r25, r24
 200:	97 bb       	out	0x17, r25	; 23
 202:	98 b3       	in	r25, 0x18	; 24
 204:	80 95       	com	r24
 206:	89 23       	and	r24, r25
 208:	88 bb       	out	0x18, r24	; 24
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	08 95       	ret
 20e:	24 b3       	in	r18, 0x14	; 20
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	02 c0       	rjmp	.+4      	; 0x21a <DIO_InitPin+0x76>
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	6a 95       	dec	r22
 21c:	e2 f7       	brpl	.-8      	; 0x216 <DIO_InitPin+0x72>
 21e:	92 2f       	mov	r25, r18
 220:	98 2b       	or	r25, r24
 222:	94 bb       	out	0x14, r25	; 20
 224:	95 b3       	in	r25, 0x15	; 21
 226:	80 95       	com	r24
 228:	89 23       	and	r24, r25
 22a:	85 bb       	out	0x15, r24	; 21
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	08 95       	ret
 230:	21 b3       	in	r18, 0x11	; 17
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_InitPin+0x98>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	6a 95       	dec	r22
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_InitPin+0x94>
 240:	92 2f       	mov	r25, r18
 242:	98 2b       	or	r25, r24
 244:	91 bb       	out	0x11, r25	; 17
 246:	92 b3       	in	r25, 0x12	; 18
 248:	80 95       	com	r24
 24a:	89 23       	and	r24, r25
 24c:	82 bb       	out	0x12, r24	; 18
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	08 95       	ret
 252:	81 30       	cpi	r24, 0x01	; 1
 254:	b9 f0       	breq	.+46     	; 0x284 <DIO_InitPin+0xe0>
 256:	28 f0       	brcs	.+10     	; 0x262 <DIO_InitPin+0xbe>
 258:	82 30       	cpi	r24, 0x02	; 2
 25a:	29 f1       	breq	.+74     	; 0x2a6 <DIO_InitPin+0x102>
 25c:	83 30       	cpi	r24, 0x03	; 3
 25e:	a1 f1       	breq	.+104    	; 0x2c8 <DIO_InitPin+0x124>
 260:	96 c0       	rjmp	.+300    	; 0x38e <DIO_InitPin+0x1ea>
 262:	2a b3       	in	r18, 0x1a	; 26
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	02 c0       	rjmp	.+4      	; 0x26e <DIO_InitPin+0xca>
 26a:	88 0f       	add	r24, r24
 26c:	99 1f       	adc	r25, r25
 26e:	6a 95       	dec	r22
 270:	e2 f7       	brpl	.-8      	; 0x26a <DIO_InitPin+0xc6>
 272:	80 95       	com	r24
 274:	92 2f       	mov	r25, r18
 276:	98 23       	and	r25, r24
 278:	9a bb       	out	0x1a, r25	; 26
 27a:	9b b3       	in	r25, 0x1b	; 27
 27c:	89 23       	and	r24, r25
 27e:	8b bb       	out	0x1b, r24	; 27
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	08 95       	ret
 284:	27 b3       	in	r18, 0x17	; 23
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	02 c0       	rjmp	.+4      	; 0x290 <DIO_InitPin+0xec>
 28c:	88 0f       	add	r24, r24
 28e:	99 1f       	adc	r25, r25
 290:	6a 95       	dec	r22
 292:	e2 f7       	brpl	.-8      	; 0x28c <DIO_InitPin+0xe8>
 294:	80 95       	com	r24
 296:	92 2f       	mov	r25, r18
 298:	98 23       	and	r25, r24
 29a:	97 bb       	out	0x17, r25	; 23
 29c:	98 b3       	in	r25, 0x18	; 24
 29e:	89 23       	and	r24, r25
 2a0:	88 bb       	out	0x18, r24	; 24
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	08 95       	ret
 2a6:	24 b3       	in	r18, 0x14	; 20
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <DIO_InitPin+0x10e>
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	6a 95       	dec	r22
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <DIO_InitPin+0x10a>
 2b6:	80 95       	com	r24
 2b8:	92 2f       	mov	r25, r18
 2ba:	98 23       	and	r25, r24
 2bc:	94 bb       	out	0x14, r25	; 20
 2be:	95 b3       	in	r25, 0x15	; 21
 2c0:	89 23       	and	r24, r25
 2c2:	85 bb       	out	0x15, r24	; 21
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	08 95       	ret
 2c8:	21 b3       	in	r18, 0x11	; 17
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <DIO_InitPin+0x130>
 2d0:	88 0f       	add	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	6a 95       	dec	r22
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <DIO_InitPin+0x12c>
 2d8:	80 95       	com	r24
 2da:	92 2f       	mov	r25, r18
 2dc:	98 23       	and	r25, r24
 2de:	91 bb       	out	0x11, r25	; 17
 2e0:	92 b3       	in	r25, 0x12	; 18
 2e2:	89 23       	and	r24, r25
 2e4:	82 bb       	out	0x12, r24	; 18
 2e6:	80 e0       	ldi	r24, 0x00	; 0
 2e8:	08 95       	ret
 2ea:	81 30       	cpi	r24, 0x01	; 1
 2ec:	b9 f0       	breq	.+46     	; 0x31c <DIO_InitPin+0x178>
 2ee:	28 f0       	brcs	.+10     	; 0x2fa <DIO_InitPin+0x156>
 2f0:	82 30       	cpi	r24, 0x02	; 2
 2f2:	29 f1       	breq	.+74     	; 0x33e <DIO_InitPin+0x19a>
 2f4:	83 30       	cpi	r24, 0x03	; 3
 2f6:	a1 f1       	breq	.+104    	; 0x360 <DIO_InitPin+0x1bc>
 2f8:	4c c0       	rjmp	.+152    	; 0x392 <DIO_InitPin+0x1ee>
 2fa:	2a b3       	in	r18, 0x1a	; 26
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	02 c0       	rjmp	.+4      	; 0x306 <DIO_InitPin+0x162>
 302:	88 0f       	add	r24, r24
 304:	99 1f       	adc	r25, r25
 306:	6a 95       	dec	r22
 308:	e2 f7       	brpl	.-8      	; 0x302 <DIO_InitPin+0x15e>
 30a:	98 2f       	mov	r25, r24
 30c:	90 95       	com	r25
 30e:	92 23       	and	r25, r18
 310:	9a bb       	out	0x1a, r25	; 26
 312:	9b b3       	in	r25, 0x1b	; 27
 314:	89 2b       	or	r24, r25
 316:	8b bb       	out	0x1b, r24	; 27
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	08 95       	ret
 31c:	27 b3       	in	r18, 0x17	; 23
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	02 c0       	rjmp	.+4      	; 0x328 <DIO_InitPin+0x184>
 324:	88 0f       	add	r24, r24
 326:	99 1f       	adc	r25, r25
 328:	6a 95       	dec	r22
 32a:	e2 f7       	brpl	.-8      	; 0x324 <DIO_InitPin+0x180>
 32c:	98 2f       	mov	r25, r24
 32e:	90 95       	com	r25
 330:	92 23       	and	r25, r18
 332:	97 bb       	out	0x17, r25	; 23
 334:	98 b3       	in	r25, 0x18	; 24
 336:	89 2b       	or	r24, r25
 338:	88 bb       	out	0x18, r24	; 24
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	08 95       	ret
 33e:	24 b3       	in	r18, 0x14	; 20
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	02 c0       	rjmp	.+4      	; 0x34a <DIO_InitPin+0x1a6>
 346:	88 0f       	add	r24, r24
 348:	99 1f       	adc	r25, r25
 34a:	6a 95       	dec	r22
 34c:	e2 f7       	brpl	.-8      	; 0x346 <DIO_InitPin+0x1a2>
 34e:	98 2f       	mov	r25, r24
 350:	90 95       	com	r25
 352:	92 23       	and	r25, r18
 354:	94 bb       	out	0x14, r25	; 20
 356:	95 b3       	in	r25, 0x15	; 21
 358:	89 2b       	or	r24, r25
 35a:	85 bb       	out	0x15, r24	; 21
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	08 95       	ret
 360:	21 b3       	in	r18, 0x11	; 17
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	02 c0       	rjmp	.+4      	; 0x36c <DIO_InitPin+0x1c8>
 368:	88 0f       	add	r24, r24
 36a:	99 1f       	adc	r25, r25
 36c:	6a 95       	dec	r22
 36e:	e2 f7       	brpl	.-8      	; 0x368 <DIO_InitPin+0x1c4>
 370:	98 2f       	mov	r25, r24
 372:	90 95       	com	r25
 374:	92 23       	and	r25, r18
 376:	91 bb       	out	0x11, r25	; 17
 378:	92 b3       	in	r25, 0x12	; 18
 37a:	89 2b       	or	r24, r25
 37c:	82 bb       	out	0x12, r24	; 18
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	08 95       	ret
 382:	82 e0       	ldi	r24, 0x02	; 2
 384:	08 95       	ret
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	08 95       	ret
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	08 95       	ret
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	08 95       	ret
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	08 95       	ret

00000396 <DIO_WritePin>:
 396:	88 30       	cpi	r24, 0x08	; 8
 398:	08 f0       	brcs	.+2      	; 0x39c <DIO_WritePin+0x6>
 39a:	79 c0       	rjmp	.+242    	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 39c:	44 23       	and	r20, r20
 39e:	d9 f1       	breq	.+118    	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 3a0:	41 30       	cpi	r20, 0x01	; 1
 3a2:	09 f0       	breq	.+2      	; 0x3a6 <DIO_WritePin+0x10>
 3a4:	76 c0       	rjmp	.+236    	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 3a6:	81 30       	cpi	r24, 0x01	; 1
 3a8:	91 f0       	breq	.+36     	; 0x3ce <DIO_WritePin+0x38>
 3aa:	28 f0       	brcs	.+10     	; 0x3b6 <DIO_WritePin+0x20>
 3ac:	82 30       	cpi	r24, 0x02	; 2
 3ae:	d9 f0       	breq	.+54     	; 0x3e6 <DIO_WritePin+0x50>
 3b0:	83 30       	cpi	r24, 0x03	; 3
 3b2:	29 f1       	breq	.+74     	; 0x3fe <DIO_WritePin+0x68>
 3b4:	70 c0       	rjmp	.+224    	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 3b6:	2b b3       	in	r18, 0x1b	; 27
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_WritePin+0x2c>
 3be:	88 0f       	add	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	6a 95       	dec	r22
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_WritePin+0x28>
 3c6:	82 2b       	or	r24, r18
 3c8:	8b bb       	out	0x1b, r24	; 27
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	08 95       	ret
 3ce:	28 b3       	in	r18, 0x18	; 24
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <DIO_WritePin+0x44>
 3d6:	88 0f       	add	r24, r24
 3d8:	99 1f       	adc	r25, r25
 3da:	6a 95       	dec	r22
 3dc:	e2 f7       	brpl	.-8      	; 0x3d6 <DIO_WritePin+0x40>
 3de:	82 2b       	or	r24, r18
 3e0:	88 bb       	out	0x18, r24	; 24
 3e2:	80 e0       	ldi	r24, 0x00	; 0
 3e4:	08 95       	ret
 3e6:	25 b3       	in	r18, 0x15	; 21
 3e8:	81 e0       	ldi	r24, 0x01	; 1
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <DIO_WritePin+0x5c>
 3ee:	88 0f       	add	r24, r24
 3f0:	99 1f       	adc	r25, r25
 3f2:	6a 95       	dec	r22
 3f4:	e2 f7       	brpl	.-8      	; 0x3ee <DIO_WritePin+0x58>
 3f6:	82 2b       	or	r24, r18
 3f8:	85 bb       	out	0x15, r24	; 21
 3fa:	80 e0       	ldi	r24, 0x00	; 0
 3fc:	08 95       	ret
 3fe:	22 b3       	in	r18, 0x12	; 18
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	02 c0       	rjmp	.+4      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 406:	88 0f       	add	r24, r24
 408:	99 1f       	adc	r25, r25
 40a:	6a 95       	dec	r22
 40c:	e2 f7       	brpl	.-8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 40e:	82 2b       	or	r24, r18
 410:	82 bb       	out	0x12, r24	; 18
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	08 95       	ret
 416:	81 30       	cpi	r24, 0x01	; 1
 418:	99 f0       	breq	.+38     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 41a:	28 f0       	brcs	.+10     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 41c:	82 30       	cpi	r24, 0x02	; 2
 41e:	e9 f0       	breq	.+58     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 420:	83 30       	cpi	r24, 0x03	; 3
 422:	41 f1       	breq	.+80     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 424:	3a c0       	rjmp	.+116    	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 426:	2b b3       	in	r18, 0x1b	; 27
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	02 c0       	rjmp	.+4      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 42e:	88 0f       	add	r24, r24
 430:	99 1f       	adc	r25, r25
 432:	6a 95       	dec	r22
 434:	e2 f7       	brpl	.-8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 436:	80 95       	com	r24
 438:	82 23       	and	r24, r18
 43a:	8b bb       	out	0x1b, r24	; 27
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	08 95       	ret
 440:	28 b3       	in	r18, 0x18	; 24
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	02 c0       	rjmp	.+4      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 448:	88 0f       	add	r24, r24
 44a:	99 1f       	adc	r25, r25
 44c:	6a 95       	dec	r22
 44e:	e2 f7       	brpl	.-8      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 450:	80 95       	com	r24
 452:	82 23       	and	r24, r18
 454:	88 bb       	out	0x18, r24	; 24
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	08 95       	ret
 45a:	25 b3       	in	r18, 0x15	; 21
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	02 c0       	rjmp	.+4      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 462:	88 0f       	add	r24, r24
 464:	99 1f       	adc	r25, r25
 466:	6a 95       	dec	r22
 468:	e2 f7       	brpl	.-8      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 46a:	80 95       	com	r24
 46c:	82 23       	and	r24, r18
 46e:	85 bb       	out	0x15, r24	; 21
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	08 95       	ret
 474:	22 b3       	in	r18, 0x12	; 18
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	02 c0       	rjmp	.+4      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 47c:	88 0f       	add	r24, r24
 47e:	99 1f       	adc	r25, r25
 480:	6a 95       	dec	r22
 482:	e2 f7       	brpl	.-8      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 484:	80 95       	com	r24
 486:	82 23       	and	r24, r18
 488:	82 bb       	out	0x12, r24	; 18
 48a:	80 e0       	ldi	r24, 0x00	; 0
 48c:	08 95       	ret
 48e:	82 e0       	ldi	r24, 0x02	; 2
 490:	08 95       	ret
 492:	83 e0       	ldi	r24, 0x03	; 3
 494:	08 95       	ret
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	08 95       	ret
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	08 95       	ret

0000049e <DIO_ReadPin>:
    en_dioError_t  DIO_ReadPin  (DIO_Port_type port, u8 u8_PinNumber,DIO_PinVoltage_type *volt)
    {
	    en_dioError_t error = DIO_OK;
	    if (u8_PinNumber <PIN_MAX )
 49e:	68 30       	cpi	r22, 0x08	; 8
 4a0:	c0 f5       	brcc	.+112    	; 0x512 <DIO_ReadPin+0x74>
	    {

		    switch(port)
 4a2:	81 30       	cpi	r24, 0x01	; 1
 4a4:	91 f0       	breq	.+36     	; 0x4ca <DIO_ReadPin+0x2c>
 4a6:	28 f0       	brcs	.+10     	; 0x4b2 <DIO_ReadPin+0x14>
 4a8:	82 30       	cpi	r24, 0x02	; 2
 4aa:	d9 f0       	breq	.+54     	; 0x4e2 <DIO_ReadPin+0x44>
 4ac:	83 30       	cpi	r24, 0x03	; 3
 4ae:	29 f1       	breq	.+74     	; 0x4fa <DIO_ReadPin+0x5c>
 4b0:	32 c0       	rjmp	.+100    	; 0x516 <DIO_ReadPin+0x78>
		    {
			    case PA:

			    *volt=READ_BIT(PINA,u8_PinNumber);
 4b2:	89 b3       	in	r24, 0x19	; 25
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <DIO_ReadPin+0x1e>
 4b8:	95 95       	asr	r25
 4ba:	87 95       	ror	r24
 4bc:	6a 95       	dec	r22
 4be:	e2 f7       	brpl	.-8      	; 0x4b8 <DIO_ReadPin+0x1a>
 4c0:	81 70       	andi	r24, 0x01	; 1
 4c2:	fa 01       	movw	r30, r20
 4c4:	80 83       	st	Z, r24
	    }
	    return error;
    }
    en_dioError_t  DIO_ReadPin  (DIO_Port_type port, u8 u8_PinNumber,DIO_PinVoltage_type *volt)
    {
	    en_dioError_t error = DIO_OK;
 4c6:	80 e0       	ldi	r24, 0x00	; 0
		    switch(port)
		    {
			    case PA:

			    *volt=READ_BIT(PINA,u8_PinNumber);
			    break;
 4c8:	08 95       	ret
			    case PB:

			    *volt=READ_BIT(PINB,u8_PinNumber);
 4ca:	86 b3       	in	r24, 0x16	; 22
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <DIO_ReadPin+0x36>
 4d0:	95 95       	asr	r25
 4d2:	87 95       	ror	r24
 4d4:	6a 95       	dec	r22
 4d6:	e2 f7       	brpl	.-8      	; 0x4d0 <DIO_ReadPin+0x32>
 4d8:	81 70       	andi	r24, 0x01	; 1
 4da:	fa 01       	movw	r30, r20
 4dc:	80 83       	st	Z, r24
	    }
	    return error;
    }
    en_dioError_t  DIO_ReadPin  (DIO_Port_type port, u8 u8_PinNumber,DIO_PinVoltage_type *volt)
    {
	    en_dioError_t error = DIO_OK;
 4de:	80 e0       	ldi	r24, 0x00	; 0
			    *volt=READ_BIT(PINA,u8_PinNumber);
			    break;
			    case PB:

			    *volt=READ_BIT(PINB,u8_PinNumber);
			    break;
 4e0:	08 95       	ret
			    case PC:

			    *volt=READ_BIT(PINC,u8_PinNumber);
 4e2:	83 b3       	in	r24, 0x13	; 19
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <DIO_ReadPin+0x4e>
 4e8:	95 95       	asr	r25
 4ea:	87 95       	ror	r24
 4ec:	6a 95       	dec	r22
 4ee:	e2 f7       	brpl	.-8      	; 0x4e8 <DIO_ReadPin+0x4a>
 4f0:	81 70       	andi	r24, 0x01	; 1
 4f2:	fa 01       	movw	r30, r20
 4f4:	80 83       	st	Z, r24
	    }
	    return error;
    }
    en_dioError_t  DIO_ReadPin  (DIO_Port_type port, u8 u8_PinNumber,DIO_PinVoltage_type *volt)
    {
	    en_dioError_t error = DIO_OK;
 4f6:	80 e0       	ldi	r24, 0x00	; 0
			    *volt=READ_BIT(PINB,u8_PinNumber);
			    break;
			    case PC:

			    *volt=READ_BIT(PINC,u8_PinNumber);
			    break;
 4f8:	08 95       	ret
			    case PD:

			    *volt=READ_BIT(PIND,u8_PinNumber);
 4fa:	80 b3       	in	r24, 0x10	; 16
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	02 c0       	rjmp	.+4      	; 0x504 <DIO_ReadPin+0x66>
 500:	95 95       	asr	r25
 502:	87 95       	ror	r24
 504:	6a 95       	dec	r22
 506:	e2 f7       	brpl	.-8      	; 0x500 <DIO_ReadPin+0x62>
 508:	81 70       	andi	r24, 0x01	; 1
 50a:	fa 01       	movw	r30, r20
 50c:	80 83       	st	Z, r24
	    }
	    return error;
    }
    en_dioError_t  DIO_ReadPin  (DIO_Port_type port, u8 u8_PinNumber,DIO_PinVoltage_type *volt)
    {
	    en_dioError_t error = DIO_OK;
 50e:	80 e0       	ldi	r24, 0x00	; 0
			    *volt=READ_BIT(PINC,u8_PinNumber);
			    break;
			    case PD:

			    *volt=READ_BIT(PIND,u8_PinNumber);
			    break;
 510:	08 95       	ret
		    }

	    }
	    else
	    {
		    error = WRONG_PinNumber;
 512:	82 e0       	ldi	r24, 0x02	; 2
 514:	08 95       	ret
			    case PD:

			    *volt=READ_BIT(PIND,u8_PinNumber);
			    break;
			    default:
			    error = WRONG_PortNumber;
 516:	81 e0       	ldi	r24, 0x01	; 1
	    else
	    {
		    error = WRONG_PinNumber;
	    }
	    return error;
    }
 518:	08 95       	ret

0000051a <_exit>:
 51a:	f8 94       	cli

0000051c <__stop_program>:
 51c:	ff cf       	rjmp	.-2      	; 0x51c <__stop_program>
